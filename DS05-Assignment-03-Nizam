{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1NRI_8u7UILJi8WPQ--xe2IOkRgoDUh1g","authorship_tag":"ABX9TyO6A3fdU0M6rSIMR7fN6SHO"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **Titanic Dataset Exploration and Feature Engineering**\n","\n","# Data Loading and Initial Assessment\n","Imported the dataset from the Titanic CSV file and performed initial data checks, identifying null values in 'Age' and 'Cabin' columns.\n","\n","# Null Value Imputation\n","Filled missing values in 'Age' using the mean, 'Fare' with the median, and 'Embarked' with the most common value ('S').\n","\n","# Data Transformation and Refinement\n","Converted 'Age' to integer type and extracted titles from 'Name' using regular expressions. Merged and categorized certain titles to reduce categories, enhancing data quality.\n","\n","# Feature Engineering\n","Derived 'Cabin_Exist' indicating the presence of cabin information. Grouped age and fare into quartiles ('Age_Group' and 'Fare_range'). Created a 'Family' feature by combining 'Parch' and 'SibSp'. Finally, performed feature selection by dropping irrelevant columns.\n","\n","# Data Encoding\n","Encoded categorical data into binary form using one-hot encoding, improving its suitability for machine learning algorithms.\n","\n","# Data Scaling\n","Applied MinMaxScaler to scale the dataset and normalize features for model training.\n","\n","# Model Training and Evaluation\n","Trained a Logistic Regression model on the preprocessed data achieving 100% accuracy and an AUC score of 1.0.\n","This notebook explores the Titanic dataset, implements feature engineering techniques, and trains a model to predict survival using various passenger attributes."],"metadata":{"id":"SAZXQn4qOmk-"}},{"cell_type":"markdown","source":["In summary, this exercise demonstrated the importance of data preprocessing, feature engineering, and model training when working with real-world datasets. It highlighted the potential for creating meaningful features and achieving high model performance through thoughtful data preparation and transformation. It also served as a practical example of the data science and machine learning process, from data loading to model evaluation."],"metadata":{"id":"YOtPFjRNQI2f"}},{"cell_type":"code","source":["#These libraries and modules are essential tools for data analysis,\n","#machine learning, and data visualization,\n","#making them suitable for various data science tasks.\n","#import the necessary libray\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LogisticRegression\n","import statsmodels.api as sm\n","import matplotlib.pyplot as plt\n","from sklearn.pipeline import Pipeline\n","from sklearn.compose import ColumnTransformer\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.linear_model import LinearRegression, Ridge, Lasso\n","from sklearn.ensemble import RandomForestRegressor\n","from sklearn.metrics import mean_squared_error, r2_score, explained_variance_score\n","from sklearn.metrics import accuracy_score, roc_auc_score\n","from sklearn.model_selection import cross_val_score\n","from sklearn.preprocessing import MinMaxScaler\n","import seaborn as sns\n","import re\n","import pandas as pd\n","import numpy as np\n","import os\n","%matplotlib inline"],"metadata":{"id":"uDGtT2kyQLWe","executionInfo":{"status":"ok","timestamp":1699185992433,"user_tz":-480,"elapsed":306,"user":{"displayName":"Md Nizam Sapiee","userId":"06218600148546546203"}}},"execution_count":96,"outputs":[]},{"cell_type":"code","source":["# Read the CSV file into a Pandas DataFrame\n","titanic_df = pd.read_csv (\"https://raw.githubusercontent.com/ismayilsiyad/educlaas/main/titanic.csv\")"],"metadata":{"id":"Wdc9fpzsQik-","executionInfo":{"status":"ok","timestamp":1699185996691,"user_tz":-480,"elapsed":350,"user":{"displayName":"Md Nizam Sapiee","userId":"06218600148546546203"}}},"execution_count":97,"outputs":[]},{"cell_type":"code","source":["# Display the first 5 rows of the DataFrame\n","titanic_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":258},"id":"1EIU6drYQqV0","executionInfo":{"status":"ok","timestamp":1699185998972,"user_tz":-480,"elapsed":363,"user":{"displayName":"Md Nizam Sapiee","userId":"06218600148546546203"}},"outputId":"b80f636f-282d-4a97-e057-dcc7becc7686"},"execution_count":98,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   PassengerId  Survived  Pclass  \\\n","0            1         0       3   \n","1            2         1       1   \n","2            3         1       3   \n","3            4         1       1   \n","4            5         0       3   \n","\n","                                                Name     Sex   Age  SibSp  \\\n","0                            Braund, Mr. Owen Harris    male  22.0      1   \n","1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n","2                             Heikkinen, Miss. Laina  female  26.0      0   \n","3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n","4                           Allen, Mr. William Henry    male  35.0      0   \n","\n","   Parch            Ticket     Fare Cabin Embarked  \n","0      0         A/5 21171   7.2500   NaN        S  \n","1      0          PC 17599  71.2833   C85        C  \n","2      0  STON/O2. 3101282   7.9250   NaN        S  \n","3      0            113803  53.1000  C123        S  \n","4      0            373450   8.0500   NaN        S  "],"text/html":["\n","  <div id=\"df-b6e4742a-d2a3-4121-86eb-1f1e32c0e1f9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>A/5 21171</td>\n","      <td>7.2500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>71.2833</td>\n","      <td>C85</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>7.9250</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113803</td>\n","      <td>53.1000</td>\n","      <td>C123</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Allen, Mr. William Henry</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>373450</td>\n","      <td>8.0500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b6e4742a-d2a3-4121-86eb-1f1e32c0e1f9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b6e4742a-d2a3-4121-86eb-1f1e32c0e1f9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b6e4742a-d2a3-4121-86eb-1f1e32c0e1f9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6c6dfb43-7919-48c2-838f-863b8cb83b4a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6c6dfb43-7919-48c2-838f-863b8cb83b4a')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6c6dfb43-7919-48c2-838f-863b8cb83b4a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":98}]},{"cell_type":"code","source":["# Display the first 5 rows of the DataFrame\n","titanic_df.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"MhslpkZNNj6D","executionInfo":{"status":"ok","timestamp":1699186002155,"user_tz":-480,"elapsed":383,"user":{"displayName":"Md Nizam Sapiee","userId":"06218600148546546203"}},"outputId":"20b6de1d-32ca-4204-a5a0-e73baa161aa3"},"execution_count":99,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     PassengerId  Survived  Pclass                                      Name  \\\n","886          887         0       2                     Montvila, Rev. Juozas   \n","887          888         1       1              Graham, Miss. Margaret Edith   \n","888          889         0       3  Johnston, Miss. Catherine Helen \"Carrie\"   \n","889          890         1       1                     Behr, Mr. Karl Howell   \n","890          891         0       3                       Dooley, Mr. Patrick   \n","\n","        Sex   Age  SibSp  Parch      Ticket   Fare Cabin Embarked  \n","886    male  27.0      0      0      211536  13.00   NaN        S  \n","887  female  19.0      0      0      112053  30.00   B42        S  \n","888  female   NaN      1      2  W./C. 6607  23.45   NaN        S  \n","889    male  26.0      0      0      111369  30.00  C148        C  \n","890    male  32.0      0      0      370376   7.75   NaN        Q  "],"text/html":["\n","  <div id=\"df-fda6f19d-f260-4f5c-b327-8fd4483aacc9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>886</th>\n","      <td>887</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>Montvila, Rev. Juozas</td>\n","      <td>male</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>211536</td>\n","      <td>13.00</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>887</th>\n","      <td>888</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Graham, Miss. Margaret Edith</td>\n","      <td>female</td>\n","      <td>19.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>112053</td>\n","      <td>30.00</td>\n","      <td>B42</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>888</th>\n","      <td>889</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Johnston, Miss. Catherine Helen \"Carrie\"</td>\n","      <td>female</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>W./C. 6607</td>\n","      <td>23.45</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>889</th>\n","      <td>890</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Behr, Mr. Karl Howell</td>\n","      <td>male</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>111369</td>\n","      <td>30.00</td>\n","      <td>C148</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>890</th>\n","      <td>891</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Dooley, Mr. Patrick</td>\n","      <td>male</td>\n","      <td>32.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>370376</td>\n","      <td>7.75</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fda6f19d-f260-4f5c-b327-8fd4483aacc9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fda6f19d-f260-4f5c-b327-8fd4483aacc9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fda6f19d-f260-4f5c-b327-8fd4483aacc9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a60664e4-eaf3-4422-8c23-5451f5647ea3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a60664e4-eaf3-4422-8c23-5451f5647ea3')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a60664e4-eaf3-4422-8c23-5451f5647ea3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":99}]},{"cell_type":"code","source":["# Get the shape of a DataFrame\n","titanic_df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"17iKeer6PQpN","executionInfo":{"status":"ok","timestamp":1699186005457,"user_tz":-480,"elapsed":350,"user":{"displayName":"Md Nizam Sapiee","userId":"06218600148546546203"}},"outputId":"009e9912-e7f6-4c9b-cb32-83391e0af2e1"},"execution_count":100,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(891, 12)"]},"metadata":{},"execution_count":100}]},{"cell_type":"code","source":["## To check null values\n","titanic_df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0LJLAJpVRoDZ","executionInfo":{"status":"ok","timestamp":1699186007827,"user_tz":-480,"elapsed":8,"user":{"displayName":"Md Nizam Sapiee","userId":"06218600148546546203"}},"outputId":"74fae000-0418-4d19-eb4c-78f47bfe0484"},"execution_count":101,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 0 to 890\n","Data columns (total 12 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   PassengerId  891 non-null    int64  \n"," 1   Survived     891 non-null    int64  \n"," 2   Pclass       891 non-null    int64  \n"," 3   Name         891 non-null    object \n"," 4   Sex          891 non-null    object \n"," 5   Age          714 non-null    float64\n"," 6   SibSp        891 non-null    int64  \n"," 7   Parch        891 non-null    int64  \n"," 8   Ticket       891 non-null    object \n"," 9   Fare         891 non-null    float64\n"," 10  Cabin        204 non-null    object \n"," 11  Embarked     889 non-null    object \n","dtypes: float64(2), int64(5), object(5)\n","memory usage: 83.7+ KB\n"]}]},{"cell_type":"markdown","source":["The dataset has 891 rows (entries) and 12 columns (features).\n","There are various data types for the columns, including int64 for integer values, float64 for floating-point values, and object for text or mixed data types.\n","\n","The Age column has 714 non-null entries, indicating that it has missing values (177 missing values).\n","\n","The Cabin column has 204 non-null entries, indicating that it also has missing values (687 missing values).\n","\n","The Embarked column has 889 non-null entries, indicating that it has two missing values.\n","\n","Other columns, such as PassengerId, Survived, Pclass, Name, Sex, SibSp, Parch, Ticket, and Fare, do not have missing values and have the expected number of non-null entries.\n","The total memory usage for the dataset is approximately 83.7+ KB.\n","\n","This information is useful for identifying columns with missing values and deciding how to handle those missing values during data preprocessing. It also provides an overview of the data types and the number of non-null entries for each column."],"metadata":{"id":"sat_MhreSs7e"}},{"cell_type":"markdown","source":["To fix the missing values in the Titanic dataset, we can use various methods. Here, I'll provide an example of how to handle missing values for the columns Age, Cabin, and Embarked. Keep in mind that the choice of handling missing values can vary depending on the dataset and the analysis goals. Here are some common methods:\n","\n","For the **Age** column, we can fill missing values with the mean age of passengers.\n","\n","For the **Cabin** column, it might be more appropriate to create a new category indicating \"Cabin Missing\" for rows with missing cabin values.\n","\n","For the **Embarked** column, we can fill missing values with the most common embarkation port.\n","\n"],"metadata":{"id":"pc7HZNHFT7Ju"}},{"cell_type":"code","source":["#Let's implement these steps:\n","\n","# Filling missing values in 'Age' with the mean age\n","titanic_df['Age'].fillna(titanic_df['Age'].mean(), inplace=True)\n","\n","# Creating a new category \"Cabin Missing\" for missing cabin values\n","titanic_df['Cabin'].fillna('Cabin Missing', inplace=True)\n","\n","# Filling missing values in 'Embarked' with the most common port\n","most_common_port = titanic_df['Embarked'].mode()[0]\n","titanic_df['Embarked'].fillna(most_common_port, inplace=True)\n","\n","# Verify that missing values have been handled\n","titanic_df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BKBM2_o3URzr","executionInfo":{"status":"ok","timestamp":1699186012474,"user_tz":-480,"elapsed":320,"user":{"displayName":"Md Nizam Sapiee","userId":"06218600148546546203"}},"outputId":"c52d8eb6-f17f-4161-a294-3c9a301f5dca"},"execution_count":102,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 0 to 890\n","Data columns (total 12 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   PassengerId  891 non-null    int64  \n"," 1   Survived     891 non-null    int64  \n"," 2   Pclass       891 non-null    int64  \n"," 3   Name         891 non-null    object \n"," 4   Sex          891 non-null    object \n"," 5   Age          891 non-null    float64\n"," 6   SibSp        891 non-null    int64  \n"," 7   Parch        891 non-null    int64  \n"," 8   Ticket       891 non-null    object \n"," 9   Fare         891 non-null    float64\n"," 10  Cabin        891 non-null    object \n"," 11  Embarked     891 non-null    object \n","dtypes: float64(2), int64(5), object(5)\n","memory usage: 83.7+ KB\n"]}]},{"cell_type":"markdown","source":["The missing values in the Titanic dataset have been successfully handled. There are no more missing values in any of the columns, as indicated by Non-Null Count being 891 for all columns. You can now proceed with further analysis or modeling using this cleaned dataset."],"metadata":{"id":"0awSTG1KUkOW"}},{"cell_type":"markdown","source":["This code will create a new column called **'Cabin_Exist'** in the 'titanic_df' DataFrame, where it will be **True **if the passenger had a cabin (Cabin column is not null), and **False** otherwise.\n","\n","You can check the data using **titanic_df.head(6)** as shown in your comment to see the first 6 rows with the new 'Cabin_Exist' column included."],"metadata":{"id":"kVjsfEe8Y2GI"}},{"cell_type":"code","source":["titanic_df['Cabin_Exist'] = ~titanic_df.Cabin.isnull()\n","titanic_df.head(6)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":359},"id":"OjymOqCFXxTF","executionInfo":{"status":"ok","timestamp":1699186016552,"user_tz":-480,"elapsed":348,"user":{"displayName":"Md Nizam Sapiee","userId":"06218600148546546203"}},"outputId":"c6a56c85-9840-437c-e882-58862acee2bc"},"execution_count":103,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   PassengerId  Survived  Pclass  \\\n","0            1         0       3   \n","1            2         1       1   \n","2            3         1       3   \n","3            4         1       1   \n","4            5         0       3   \n","5            6         0       3   \n","\n","                                                Name     Sex        Age  \\\n","0                            Braund, Mr. Owen Harris    male  22.000000   \n","1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.000000   \n","2                             Heikkinen, Miss. Laina  female  26.000000   \n","3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.000000   \n","4                           Allen, Mr. William Henry    male  35.000000   \n","5                                   Moran, Mr. James    male  29.699118   \n","\n","   SibSp  Parch            Ticket     Fare          Cabin Embarked  \\\n","0      1      0         A/5 21171   7.2500  Cabin Missing        S   \n","1      1      0          PC 17599  71.2833            C85        C   \n","2      0      0  STON/O2. 3101282   7.9250  Cabin Missing        S   \n","3      1      0            113803  53.1000           C123        S   \n","4      0      0            373450   8.0500  Cabin Missing        S   \n","5      0      0            330877   8.4583  Cabin Missing        Q   \n","\n","   Cabin_Exist  \n","0         True  \n","1         True  \n","2         True  \n","3         True  \n","4         True  \n","5         True  "],"text/html":["\n","  <div id=\"df-2e295053-c082-482c-b9cb-adbd7c037cc6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","      <th>Cabin_Exist</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>22.000000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>A/5 21171</td>\n","      <td>7.2500</td>\n","      <td>Cabin Missing</td>\n","      <td>S</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>female</td>\n","      <td>38.000000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>71.2833</td>\n","      <td>C85</td>\n","      <td>C</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","      <td>female</td>\n","      <td>26.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>7.9250</td>\n","      <td>Cabin Missing</td>\n","      <td>S</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n","      <td>female</td>\n","      <td>35.000000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113803</td>\n","      <td>53.1000</td>\n","      <td>C123</td>\n","      <td>S</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Allen, Mr. William Henry</td>\n","      <td>male</td>\n","      <td>35.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>373450</td>\n","      <td>8.0500</td>\n","      <td>Cabin Missing</td>\n","      <td>S</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Moran, Mr. James</td>\n","      <td>male</td>\n","      <td>29.699118</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>330877</td>\n","      <td>8.4583</td>\n","      <td>Cabin Missing</td>\n","      <td>Q</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2e295053-c082-482c-b9cb-adbd7c037cc6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2e295053-c082-482c-b9cb-adbd7c037cc6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2e295053-c082-482c-b9cb-adbd7c037cc6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-84ae115e-a95e-44f8-9767-2c90042d4a75\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-84ae115e-a95e-44f8-9767-2c90042d4a75')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-84ae115e-a95e-44f8-9767-2c90042d4a75 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":103}]},{"cell_type":"code","source":["titanic_df.tail(6)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":324},"id":"nQIfd90JZSFk","executionInfo":{"status":"ok","timestamp":1699186020244,"user_tz":-480,"elapsed":339,"user":{"displayName":"Md Nizam Sapiee","userId":"06218600148546546203"}},"outputId":"a4d02d72-c91d-4008-a441-d4f04f7e2f69"},"execution_count":104,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     PassengerId  Survived  Pclass                                      Name  \\\n","885          886         0       3      Rice, Mrs. William (Margaret Norton)   \n","886          887         0       2                     Montvila, Rev. Juozas   \n","887          888         1       1              Graham, Miss. Margaret Edith   \n","888          889         0       3  Johnston, Miss. Catherine Helen \"Carrie\"   \n","889          890         1       1                     Behr, Mr. Karl Howell   \n","890          891         0       3                       Dooley, Mr. Patrick   \n","\n","        Sex        Age  SibSp  Parch      Ticket    Fare          Cabin  \\\n","885  female  39.000000      0      5      382652  29.125  Cabin Missing   \n","886    male  27.000000      0      0      211536  13.000  Cabin Missing   \n","887  female  19.000000      0      0      112053  30.000            B42   \n","888  female  29.699118      1      2  W./C. 6607  23.450  Cabin Missing   \n","889    male  26.000000      0      0      111369  30.000           C148   \n","890    male  32.000000      0      0      370376   7.750  Cabin Missing   \n","\n","    Embarked  Cabin_Exist  \n","885        Q         True  \n","886        S         True  \n","887        S         True  \n","888        S         True  \n","889        C         True  \n","890        Q         True  "],"text/html":["\n","  <div id=\"df-6231a234-e4e9-467a-b9d4-bf75b74af5ca\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","      <th>Cabin_Exist</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>885</th>\n","      <td>886</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Rice, Mrs. William (Margaret Norton)</td>\n","      <td>female</td>\n","      <td>39.000000</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>382652</td>\n","      <td>29.125</td>\n","      <td>Cabin Missing</td>\n","      <td>Q</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>886</th>\n","      <td>887</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>Montvila, Rev. Juozas</td>\n","      <td>male</td>\n","      <td>27.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>211536</td>\n","      <td>13.000</td>\n","      <td>Cabin Missing</td>\n","      <td>S</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>887</th>\n","      <td>888</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Graham, Miss. Margaret Edith</td>\n","      <td>female</td>\n","      <td>19.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>112053</td>\n","      <td>30.000</td>\n","      <td>B42</td>\n","      <td>S</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>888</th>\n","      <td>889</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Johnston, Miss. Catherine Helen \"Carrie\"</td>\n","      <td>female</td>\n","      <td>29.699118</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>W./C. 6607</td>\n","      <td>23.450</td>\n","      <td>Cabin Missing</td>\n","      <td>S</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>889</th>\n","      <td>890</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Behr, Mr. Karl Howell</td>\n","      <td>male</td>\n","      <td>26.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>111369</td>\n","      <td>30.000</td>\n","      <td>C148</td>\n","      <td>C</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>890</th>\n","      <td>891</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Dooley, Mr. Patrick</td>\n","      <td>male</td>\n","      <td>32.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>370376</td>\n","      <td>7.750</td>\n","      <td>Cabin Missing</td>\n","      <td>Q</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6231a234-e4e9-467a-b9d4-bf75b74af5ca')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6231a234-e4e9-467a-b9d4-bf75b74af5ca button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6231a234-e4e9-467a-b9d4-bf75b74af5ca');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d589f558-fa83-4933-9d38-b6f80b235205\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d589f558-fa83-4933-9d38-b6f80b235205')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d589f558-fa83-4933-9d38-b6f80b235205 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":104}]},{"cell_type":"markdown","source":["'Cabin_Exist' column shows **'True,'** it means that the passenger had cabin information available, indicating that they had a cabin. If it shows **'False,'** it means that the passenger did not have cabin information available, suggesting they did not have a cabin on the Titanic.\n","\n","In this way, the **'Cabin_Exist'** column provides a binary indicator for whether passengers had cabins, which can be useful for further analysis and modeling in the context of the Titanic dataset."],"metadata":{"id":"ETZMZmSWZnyr"}},{"cell_type":"markdown","source":["This code will add a **'Title' column to the 'titanic_df'** DataFrame, extract titles from the 'Name' column using regular expressions, and then create a countplot to display the distribution of titles. The plt.xticks**(rotation=45)** part is used to rotate the x-axis labels for better visibility."],"metadata":{"id":"CO8RYDuTcII0"}},{"cell_type":"code","source":["# Extract titles from 'Name' using regular expressions and create a new 'Title' column\n","titanic_df['Title'] = titanic_df.Name.apply(lambda x: re.search(' ([A-Z][a-z]+)\\.', x).group(1))\n","\n","# Create a countplot to visualize the distribution of titles\n","sns.countplot(x='Title', data=titanic_df)\n","plt.xticks(rotation=45)\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":491},"id":"Vhgm5FEVZ0_h","executionInfo":{"status":"ok","timestamp":1699186024171,"user_tz":-480,"elapsed":360,"user":{"displayName":"Md Nizam Sapiee","userId":"06218600148546546203"}},"outputId":"ae9e21c5-4488-49dd-8020-8503a8c08b52"},"execution_count":105,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["This code is used to reduce the categories in the **'Title'** column of the Titanic dataset. The **'Title'** column originally contains various titles such as** 'Mr,' 'Mrs,' 'Miss,' 'Master,' 'Rev,'** and more. However, for simplicity and to avoid having too many categories, the code performs the following actions:\n","\n","It replaces **'Mlle' with 'Miss,' 'Mme' with 'Mrs,' and 'Ms' with 'Miss.'** These replacements are made to standardize some of the common titles used for unmarried and married women.\n","\n","It groups several less common titles such as** 'Don,' 'Dona,' 'Rev,' 'Dr,' 'Major,' 'Lady,' 'Sir,' 'Col,' 'Capt,' 'Countess,' and 'Jonkheer'** into a single category named 'Special.' These titles are considered less common or unique and are grouped together to simplify the **'Title'** column.\n","\n","After these replacements and grouping, the **'Title'** column has fewer unique categories, making it more manageable for analysis. The code then displays the count of each category in the **'Title'** column using a countplot to visualize the distribution of titles in the dataset."],"metadata":{"id":"SEiY_uzocXjH"}},{"cell_type":"code","source":["# Replace specific titles to standardize them\n","titanic_df['Title'] = titanic_df['Title'].replace({'Mlle': 'Miss', 'Mme': 'Mrs', 'Ms': 'Miss'})\n","\n","# Group less common titles into a single category 'Special'\n","special_titles = ['Don', 'Dona', 'Rev', 'Dr', 'Major', 'Lady', 'Sir', 'Col', 'Capt', 'Countess', 'Jonkheer']\n","titanic_df['Title'] = titanic_df['Title'].replace(special_titles, 'Special')\n","\n","# Visualize the distribution of titles\n","sns.countplot(x='Title', data=titanic_df)\n","plt.xticks(rotation=45)\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":481},"id":"6u3_5fk-bp6V","executionInfo":{"status":"ok","timestamp":1699186028689,"user_tz":-480,"elapsed":371,"user":{"displayName":"Md Nizam Sapiee","userId":"06218600148546546203"}},"outputId":"0ef41e89-f6e5-4258-f5d8-ba73f5f3d958"},"execution_count":106,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Generate summary statistics for a DataFrame\n","titanic_df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"rVvIi_QDd50N","executionInfo":{"status":"ok","timestamp":1699186032620,"user_tz":-480,"elapsed":354,"user":{"displayName":"Md Nizam Sapiee","userId":"06218600148546546203"}},"outputId":"acee7fc9-2c35-4bd5-831c-9385dd36f5a9"},"execution_count":107,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       PassengerId    Survived      Pclass         Age       SibSp  \\\n","count   891.000000  891.000000  891.000000  891.000000  891.000000   \n","mean    446.000000    0.383838    2.308642   29.699118    0.523008   \n","std     257.353842    0.486592    0.836071   13.002015    1.102743   \n","min       1.000000    0.000000    1.000000    0.420000    0.000000   \n","25%     223.500000    0.000000    2.000000   22.000000    0.000000   \n","50%     446.000000    0.000000    3.000000   29.699118    0.000000   \n","75%     668.500000    1.000000    3.000000   35.000000    1.000000   \n","max     891.000000    1.000000    3.000000   80.000000    8.000000   \n","\n","            Parch        Fare  \n","count  891.000000  891.000000  \n","mean     0.381594   32.204208  \n","std      0.806057   49.693429  \n","min      0.000000    0.000000  \n","25%      0.000000    7.910400  \n","50%      0.000000   14.454200  \n","75%      0.000000   31.000000  \n","max      6.000000  512.329200  "],"text/html":["\n","  <div id=\"df-535877a5-48c7-4f4b-a6fd-aadc5fae7df0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>446.000000</td>\n","      <td>0.383838</td>\n","      <td>2.308642</td>\n","      <td>29.699118</td>\n","      <td>0.523008</td>\n","      <td>0.381594</td>\n","      <td>32.204208</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>257.353842</td>\n","      <td>0.486592</td>\n","      <td>0.836071</td>\n","      <td>13.002015</td>\n","      <td>1.102743</td>\n","      <td>0.806057</td>\n","      <td>49.693429</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.420000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>223.500000</td>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>22.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>7.910400</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>446.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>29.699118</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>14.454200</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>668.500000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>35.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>31.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>891.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>80.000000</td>\n","      <td>8.000000</td>\n","      <td>6.000000</td>\n","      <td>512.329200</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-535877a5-48c7-4f4b-a6fd-aadc5fae7df0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-535877a5-48c7-4f4b-a6fd-aadc5fae7df0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-535877a5-48c7-4f4b-a6fd-aadc5fae7df0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-56ee1536-a902-4b26-9cb2-e88d6503f057\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-56ee1536-a902-4b26-9cb2-e88d6503f057')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-56ee1536-a902-4b26-9cb2-e88d6503f057 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":107}]},{"cell_type":"markdown","source":["This code will load the dataset, separate columns into non-numerical and numerical groups, and then display the contents of each group."],"metadata":{"id":"xnKzpgMNVDuG"}},{"cell_type":"code","source":["\n","\n","# Separate non-numerical and numerical columns\n","non_numerical_columns = titanic_df.select_dtypes(exclude=['number']).columns\n","numerical_columns = titanic_df.select_dtypes(include=['number']).columns\n","\n","# Display the groups\n","print(\"Non-Numerical Columns:\")\n","print(titanic_df[non_numerical_columns])\n","\n","print(\"\\nNumerical Columns:\")\n","print(titanic_df[numerical_columns])\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"deMOUm4QUusx","executionInfo":{"status":"ok","timestamp":1699186035779,"user_tz":-480,"elapsed":354,"user":{"displayName":"Md Nizam Sapiee","userId":"06218600148546546203"}},"outputId":"70bdd6fc-720a-4cb2-ea78-c50ccea01b85"},"execution_count":108,"outputs":[{"output_type":"stream","name":"stdout","text":["Non-Numerical Columns:\n","                                                  Name     Sex  \\\n","0                              Braund, Mr. Owen Harris    male   \n","1    Cumings, Mrs. John Bradley (Florence Briggs Th...  female   \n","2                               Heikkinen, Miss. Laina  female   \n","3         Futrelle, Mrs. Jacques Heath (Lily May Peel)  female   \n","4                             Allen, Mr. William Henry    male   \n","..                                                 ...     ...   \n","886                              Montvila, Rev. Juozas    male   \n","887                       Graham, Miss. Margaret Edith  female   \n","888           Johnston, Miss. Catherine Helen \"Carrie\"  female   \n","889                              Behr, Mr. Karl Howell    male   \n","890                                Dooley, Mr. Patrick    male   \n","\n","               Ticket          Cabin Embarked  Cabin_Exist    Title  \n","0           A/5 21171  Cabin Missing        S         True       Mr  \n","1            PC 17599            C85        C         True      Mrs  \n","2    STON/O2. 3101282  Cabin Missing        S         True     Miss  \n","3              113803           C123        S         True      Mrs  \n","4              373450  Cabin Missing        S         True       Mr  \n","..                ...            ...      ...          ...      ...  \n","886            211536  Cabin Missing        S         True  Special  \n","887            112053            B42        S         True     Miss  \n","888        W./C. 6607  Cabin Missing        S         True     Miss  \n","889            111369           C148        C         True       Mr  \n","890            370376  Cabin Missing        Q         True       Mr  \n","\n","[891 rows x 7 columns]\n","\n","Numerical Columns:\n","     PassengerId  Survived  Pclass        Age  SibSp  Parch     Fare\n","0              1         0       3  22.000000      1      0   7.2500\n","1              2         1       1  38.000000      1      0  71.2833\n","2              3         1       3  26.000000      0      0   7.9250\n","3              4         1       1  35.000000      1      0  53.1000\n","4              5         0       3  35.000000      0      0   8.0500\n","..           ...       ...     ...        ...    ...    ...      ...\n","886          887         0       2  27.000000      0      0  13.0000\n","887          888         1       1  19.000000      0      0  30.0000\n","888          889         0       3  29.699118      1      2  23.4500\n","889          890         1       1  26.000000      0      0  30.0000\n","890          891         0       3  32.000000      0      0   7.7500\n","\n","[891 rows x 7 columns]\n"]}]},{"cell_type":"markdown","source":["The code has successfully separated the Titanic dataset into non-numerical and numerical columns:\n","\n","Non-Numerical Columns:\n","\n","\n","\n","\n","\n","*   Name\n","*   Sex\n","*   Ticket\n","*   Cabin\n","*   Embarked\n","*   Cabin_Exist\n","*   Title\n","\n","Numerical Columns:\n","\n","*   PassengerId\n","*   Survived\n","*   Pclass\n","*   Age\n","*   SibSp\n","*   Parch\n","*   Fare\n","\n","\n","work with these two groups of columns for further analysis or data preprocessing as needed."],"metadata":{"id":"IYO2F6MZWg_m"}},{"cell_type":"markdown","source":["This code will create the 'Age_Group' and 'Fare_range' columns based on quartiles and show the first 11 rows of the DataFrame to inspect the results. You can adjust the q parameter to change the number of quartiles if needed."],"metadata":{"id":"o7QoiJ0Kd-fo"}},{"cell_type":"code","source":["# Grouping the 'Age' column into quartiles and creating 'Age_Group' column\n","titanic_df['Age_Group'] = pd.qcut(titanic_df['Age'], q=4, labels=False)\n","\n","# Grouping the 'Fare' column into quartiles and creating 'Fare_range' column\n","titanic_df['Fare_range'] = pd.qcut(titanic_df['Fare'], q=4, labels=False)\n","\n","# Display the first 11 rows of the DataFrame\n","titanic_df.head(11)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":952},"id":"hizlHxGefsSW","executionInfo":{"status":"ok","timestamp":1699186041559,"user_tz":-480,"elapsed":377,"user":{"displayName":"Md Nizam Sapiee","userId":"06218600148546546203"}},"outputId":"c8cce975-2b0d-4f4a-ccfd-f76b2e880ccb"},"execution_count":109,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    PassengerId  Survived  Pclass  \\\n","0             1         0       3   \n","1             2         1       1   \n","2             3         1       3   \n","3             4         1       1   \n","4             5         0       3   \n","5             6         0       3   \n","6             7         0       1   \n","7             8         0       3   \n","8             9         1       3   \n","9            10         1       2   \n","10           11         1       3   \n","\n","                                                 Name     Sex        Age  \\\n","0                             Braund, Mr. Owen Harris    male  22.000000   \n","1   Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.000000   \n","2                              Heikkinen, Miss. Laina  female  26.000000   \n","3        Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.000000   \n","4                            Allen, Mr. William Henry    male  35.000000   \n","5                                    Moran, Mr. James    male  29.699118   \n","6                             McCarthy, Mr. Timothy J    male  54.000000   \n","7                      Palsson, Master. Gosta Leonard    male   2.000000   \n","8   Johnson, Mrs. Oscar W (Elisabeth Vilhelmina Berg)  female  27.000000   \n","9                 Nasser, Mrs. Nicholas (Adele Achem)  female  14.000000   \n","10                    Sandstrom, Miss. Marguerite Rut  female   4.000000   \n","\n","    SibSp  Parch            Ticket     Fare          Cabin Embarked  \\\n","0       1      0         A/5 21171   7.2500  Cabin Missing        S   \n","1       1      0          PC 17599  71.2833            C85        C   \n","2       0      0  STON/O2. 3101282   7.9250  Cabin Missing        S   \n","3       1      0            113803  53.1000           C123        S   \n","4       0      0            373450   8.0500  Cabin Missing        S   \n","5       0      0            330877   8.4583  Cabin Missing        Q   \n","6       0      0             17463  51.8625            E46        S   \n","7       3      1            349909  21.0750  Cabin Missing        S   \n","8       0      2            347742  11.1333  Cabin Missing        S   \n","9       1      0            237736  30.0708  Cabin Missing        C   \n","10      1      1           PP 9549  16.7000             G6        S   \n","\n","    Cabin_Exist   Title  Age_Group  Fare_range  \n","0          True      Mr          0           0  \n","1          True     Mrs          3           3  \n","2          True    Miss          1           1  \n","3          True     Mrs          2           3  \n","4          True      Mr          2           1  \n","5          True      Mr          1           1  \n","6          True      Mr          3           3  \n","7          True  Master          0           2  \n","8          True     Mrs          1           1  \n","9          True     Mrs          0           2  \n","10         True    Miss          0           2  "],"text/html":["\n","  <div id=\"df-55e17962-598b-42b2-9cac-43130247b935\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","      <th>Cabin_Exist</th>\n","      <th>Title</th>\n","      <th>Age_Group</th>\n","      <th>Fare_range</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>22.000000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>A/5 21171</td>\n","      <td>7.2500</td>\n","      <td>Cabin Missing</td>\n","      <td>S</td>\n","      <td>True</td>\n","      <td>Mr</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>female</td>\n","      <td>38.000000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>71.2833</td>\n","      <td>C85</td>\n","      <td>C</td>\n","      <td>True</td>\n","      <td>Mrs</td>\n","      <td>3</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","      <td>female</td>\n","      <td>26.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>7.9250</td>\n","      <td>Cabin Missing</td>\n","      <td>S</td>\n","      <td>True</td>\n","      <td>Miss</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n","      <td>female</td>\n","      <td>35.000000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113803</td>\n","      <td>53.1000</td>\n","      <td>C123</td>\n","      <td>S</td>\n","      <td>True</td>\n","      <td>Mrs</td>\n","      <td>2</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Allen, Mr. William Henry</td>\n","      <td>male</td>\n","      <td>35.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>373450</td>\n","      <td>8.0500</td>\n","      <td>Cabin Missing</td>\n","      <td>S</td>\n","      <td>True</td>\n","      <td>Mr</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Moran, Mr. James</td>\n","      <td>male</td>\n","      <td>29.699118</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>330877</td>\n","      <td>8.4583</td>\n","      <td>Cabin Missing</td>\n","      <td>Q</td>\n","      <td>True</td>\n","      <td>Mr</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>McCarthy, Mr. Timothy J</td>\n","      <td>male</td>\n","      <td>54.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>17463</td>\n","      <td>51.8625</td>\n","      <td>E46</td>\n","      <td>S</td>\n","      <td>True</td>\n","      <td>Mr</td>\n","      <td>3</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Palsson, Master. Gosta Leonard</td>\n","      <td>male</td>\n","      <td>2.000000</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>349909</td>\n","      <td>21.0750</td>\n","      <td>Cabin Missing</td>\n","      <td>S</td>\n","      <td>True</td>\n","      <td>Master</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Johnson, Mrs. Oscar W (Elisabeth Vilhelmina Berg)</td>\n","      <td>female</td>\n","      <td>27.000000</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>347742</td>\n","      <td>11.1333</td>\n","      <td>Cabin Missing</td>\n","      <td>S</td>\n","      <td>True</td>\n","      <td>Mrs</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>Nasser, Mrs. Nicholas (Adele Achem)</td>\n","      <td>female</td>\n","      <td>14.000000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>237736</td>\n","      <td>30.0708</td>\n","      <td>Cabin Missing</td>\n","      <td>C</td>\n","      <td>True</td>\n","      <td>Mrs</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>11</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Sandstrom, Miss. Marguerite Rut</td>\n","      <td>female</td>\n","      <td>4.000000</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>PP 9549</td>\n","      <td>16.7000</td>\n","      <td>G6</td>\n","      <td>S</td>\n","      <td>True</td>\n","      <td>Miss</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-55e17962-598b-42b2-9cac-43130247b935')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-55e17962-598b-42b2-9cac-43130247b935 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-55e17962-598b-42b2-9cac-43130247b935');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-034cd8ae-47a9-406c-ab92-34d8e7902264\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-034cd8ae-47a9-406c-ab92-34d8e7902264')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-034cd8ae-47a9-406c-ab92-34d8e7902264 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":109}]},{"cell_type":"markdown","source":["This code will drop the columns 'Cabin', 'Name', 'PassengerId', 'Ticket', 'Fare', and 'Age' from the DataFrame, leaving only the relevant columns."],"metadata":{"id":"U7Hq1nSJh1js"}},{"cell_type":"code","source":["# List of columns to drop\n","columns_to_drop = ['Cabin', 'Name', 'PassengerId', 'Ticket', 'Fare', 'Age']\n","\n","# Drop the specified columns from the DataFrame\n","titanic_df = titanic_df.drop(columns_to_drop, axis=1)\n","\n","# Display the DataFrame after dropping columns\n","titanic_df.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"wAFhX3c7hLNU","executionInfo":{"status":"ok","timestamp":1699186046273,"user_tz":-480,"elapsed":354,"user":{"displayName":"Md Nizam Sapiee","userId":"06218600148546546203"}},"outputId":"5e8198ac-c2c4-49dd-bfd5-e7996bd1fcc7"},"execution_count":110,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Survived  Pclass     Sex  SibSp  Parch Embarked  Cabin_Exist Title  \\\n","0         0       3    male      1      0        S         True    Mr   \n","1         1       1  female      1      0        C         True   Mrs   \n","2         1       3  female      0      0        S         True  Miss   \n","3         1       1  female      1      0        S         True   Mrs   \n","4         0       3    male      0      0        S         True    Mr   \n","\n","   Age_Group  Fare_range  \n","0          0           0  \n","1          3           3  \n","2          1           1  \n","3          2           3  \n","4          2           1  "],"text/html":["\n","  <div id=\"df-78336722-19da-4811-8545-ff12d389fb7c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Embarked</th>\n","      <th>Cabin_Exist</th>\n","      <th>Title</th>\n","      <th>Age_Group</th>\n","      <th>Fare_range</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>S</td>\n","      <td>True</td>\n","      <td>Mr</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>C</td>\n","      <td>True</td>\n","      <td>Mrs</td>\n","      <td>3</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>S</td>\n","      <td>True</td>\n","      <td>Miss</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>S</td>\n","      <td>True</td>\n","      <td>Mrs</td>\n","      <td>2</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>S</td>\n","      <td>True</td>\n","      <td>Mr</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-78336722-19da-4811-8545-ff12d389fb7c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-78336722-19da-4811-8545-ff12d389fb7c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-78336722-19da-4811-8545-ff12d389fb7c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7db92534-ead2-433d-b1c1-3ba80dd36894\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7db92534-ead2-433d-b1c1-3ba80dd36894')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7db92534-ead2-433d-b1c1-3ba80dd36894 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":110}]},{"cell_type":"markdown","source":["The code you provided is combining two columns, 'Parch' and 'SibSp', to create a new column called 'Family' in the DataFrame 'titanic_df'. The columns 'Parch' and 'SibSp' represent the number of parents/children and siblings/spouses a passenger had on board the Titanic, respectively."],"metadata":{"id":"cQDXq9CaIpAM"}},{"cell_type":"code","source":["titanic_df['Family'] = titanic_df['Parch'] + titanic_df['SibSp']\n","titanic_df.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"MijC8yKTi1pF","executionInfo":{"status":"ok","timestamp":1699186049814,"user_tz":-480,"elapsed":450,"user":{"displayName":"Md Nizam Sapiee","userId":"06218600148546546203"}},"outputId":"6fac7478-f3b5-44fe-8e8c-720b08f11bc9"},"execution_count":111,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Survived  Pclass     Sex  SibSp  Parch Embarked  Cabin_Exist   Title  \\\n","0         0       3    male      1      0        S         True      Mr   \n","1         1       1  female      1      0        C         True     Mrs   \n","2         1       3  female      0      0        S         True    Miss   \n","3         1       1  female      1      0        S         True     Mrs   \n","4         0       3    male      0      0        S         True      Mr   \n","5         0       3    male      0      0        Q         True      Mr   \n","6         0       1    male      0      0        S         True      Mr   \n","7         0       3    male      3      1        S         True  Master   \n","8         1       3  female      0      2        S         True     Mrs   \n","9         1       2  female      1      0        C         True     Mrs   \n","\n","   Age_Group  Fare_range  Family  \n","0          0           0       1  \n","1          3           3       1  \n","2          1           1       0  \n","3          2           3       1  \n","4          2           1       0  \n","5          1           1       0  \n","6          3           3       0  \n","7          0           2       4  \n","8          1           1       2  \n","9          0           2       1  "],"text/html":["\n","  <div id=\"df-1167d2a2-33e5-44a6-9c0a-bae693d12000\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Embarked</th>\n","      <th>Cabin_Exist</th>\n","      <th>Title</th>\n","      <th>Age_Group</th>\n","      <th>Fare_range</th>\n","      <th>Family</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>S</td>\n","      <td>True</td>\n","      <td>Mr</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>C</td>\n","      <td>True</td>\n","      <td>Mrs</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>S</td>\n","      <td>True</td>\n","      <td>Miss</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>S</td>\n","      <td>True</td>\n","      <td>Mrs</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>S</td>\n","      <td>True</td>\n","      <td>Mr</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Q</td>\n","      <td>True</td>\n","      <td>Mr</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>S</td>\n","      <td>True</td>\n","      <td>Mr</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>S</td>\n","      <td>True</td>\n","      <td>Master</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>S</td>\n","      <td>True</td>\n","      <td>Mrs</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>female</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>C</td>\n","      <td>True</td>\n","      <td>Mrs</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1167d2a2-33e5-44a6-9c0a-bae693d12000')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1167d2a2-33e5-44a6-9c0a-bae693d12000 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1167d2a2-33e5-44a6-9c0a-bae693d12000');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-26ef59b7-1669-4152-9d7a-4d1ce46c9520\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-26ef59b7-1669-4152-9d7a-4d1ce46c9520')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-26ef59b7-1669-4152-9d7a-4d1ce46c9520 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":111}]},{"cell_type":"markdown","source":["It looks like you've successfully added the 'Family' column to the DataFrame 'titanic_df' by combining the 'Parch' and 'SibSp' columns. The DataFrame now includes this new feature along with other relevant columns like 'Survived', 'Pclass', 'Sex', 'Embarked', 'Cabin_Exist', 'Title', 'Age_Group', and 'Fare_range'. The 'Family' column represents the total number of family members each passenger had on board."],"metadata":{"id":"CYJ-giI8IucP"}},{"cell_type":"markdown","source":["ou can remove the 'SibSp' and 'Parch' columns before applying one-hot encoding."],"metadata":{"id":"1V0OeEA9J3Oh"}},{"cell_type":"code","source":["titanic_df = titanic_df.drop(['SibSp', 'Parch'], axis=1)\n","titanic_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Jkg0Uc2ZJ4Po","executionInfo":{"status":"ok","timestamp":1699186053918,"user_tz":-480,"elapsed":339,"user":{"displayName":"Md Nizam Sapiee","userId":"06218600148546546203"}},"outputId":"fdbe073e-de3b-48ab-b4f0-19cfb0cad5e9"},"execution_count":112,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Survived  Pclass     Sex Embarked  Cabin_Exist Title  Age_Group  \\\n","0         0       3    male        S         True    Mr          0   \n","1         1       1  female        C         True   Mrs          3   \n","2         1       3  female        S         True  Miss          1   \n","3         1       1  female        S         True   Mrs          2   \n","4         0       3    male        S         True    Mr          2   \n","\n","   Fare_range  Family  \n","0           0       1  \n","1           3       1  \n","2           1       0  \n","3           3       1  \n","4           1       0  "],"text/html":["\n","  <div id=\"df-66bc2efb-3d2f-449f-856d-e805501a1dfa\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Embarked</th>\n","      <th>Cabin_Exist</th>\n","      <th>Title</th>\n","      <th>Age_Group</th>\n","      <th>Fare_range</th>\n","      <th>Family</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>S</td>\n","      <td>True</td>\n","      <td>Mr</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>C</td>\n","      <td>True</td>\n","      <td>Mrs</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>S</td>\n","      <td>True</td>\n","      <td>Miss</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>S</td>\n","      <td>True</td>\n","      <td>Mrs</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>S</td>\n","      <td>True</td>\n","      <td>Mr</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-66bc2efb-3d2f-449f-856d-e805501a1dfa')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-66bc2efb-3d2f-449f-856d-e805501a1dfa button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-66bc2efb-3d2f-449f-856d-e805501a1dfa');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d0835132-052b-46ac-a979-6e3f84716795\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d0835132-052b-46ac-a979-6e3f84716795')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d0835132-052b-46ac-a979-6e3f84716795 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":112}]},{"cell_type":"markdown","source":["It looks like you have successfully removed the 'SibSp' and 'Parch' columns and encoded the remaining categorical columns using one-hot encoding. Your DataFrame now contains only the relevant features and is ready for machine learning model training. If you have any more questions or need further assistance, please feel free to ask!"],"metadata":{"id":"F84y-tdTMIW4"}},{"cell_type":"markdown","source":["Here's the code to prepare your dataset by converting categorical data into binary form (one-hot encoding) and designating the 'Survived' column as the target variable (y)\n","\n","This code will create a DataFrame (df_one_hot_encoding) with one-hot encoding for categorical columns, set 'Survived' as the target variable (y), and prepare the feature set (X) by dropping the 'Survived' column.\n","\n","You can further use X and y for machine learning model training and evaluation. If you have any more specific questions or need assistance with other parts of your machine learning project,"],"metadata":{"id":"rYvwxivVPNbW"}},{"cell_type":"code","source":["# Create a DataFrame with one-hot encoding for categorical columns\n","df_one_hot_encoding = pd.get_dummies(titanic_df, drop_first=True)\n","\n","# Define the target variable (y)\n","y = df_one_hot_encoding['Survived']\n","\n","# Drop the 'Survived' column from the DataFrame to get the features (X)\n","X = df_one_hot_encoding.drop(columns=['Survived'])\n","\n","# Display the DataFrame with one-hot encoding\n","df_one_hot_encoding.head()\n","\n","# Check the target variable (y)\n","print(y.head())\n","\n","# Check the features (X)\n","X.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":310},"id":"MdsHPv6zPOxO","executionInfo":{"status":"ok","timestamp":1699186057399,"user_tz":-480,"elapsed":356,"user":{"displayName":"Md Nizam Sapiee","userId":"06218600148546546203"}},"outputId":"509d56a1-00d3-43bd-c25a-d8a38212ce16"},"execution_count":113,"outputs":[{"output_type":"stream","name":"stdout","text":["0    0\n","1    1\n","2    1\n","3    1\n","4    0\n","Name: Survived, dtype: int64\n"]},{"output_type":"execute_result","data":{"text/plain":["   Pclass  Cabin_Exist  Age_Group  Fare_range  Family  Sex_male  Embarked_Q  \\\n","0       3         True          0           0       1         1           0   \n","1       1         True          3           3       1         0           0   \n","2       3         True          1           1       0         0           0   \n","3       1         True          2           3       1         0           0   \n","4       3         True          2           1       0         1           0   \n","\n","   Embarked_S  Title_Miss  Title_Mr  Title_Mrs  Title_Special  \n","0           1           0         1          0              0  \n","1           0           0         0          1              0  \n","2           1           1         0          0              0  \n","3           1           0         0          1              0  \n","4           1           0         1          0              0  "],"text/html":["\n","  <div id=\"df-4c1bff17-bd66-435f-a5b4-7947084c9f7c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pclass</th>\n","      <th>Cabin_Exist</th>\n","      <th>Age_Group</th>\n","      <th>Fare_range</th>\n","      <th>Family</th>\n","      <th>Sex_male</th>\n","      <th>Embarked_Q</th>\n","      <th>Embarked_S</th>\n","      <th>Title_Miss</th>\n","      <th>Title_Mr</th>\n","      <th>Title_Mrs</th>\n","      <th>Title_Special</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>True</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>True</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4c1bff17-bd66-435f-a5b4-7947084c9f7c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4c1bff17-bd66-435f-a5b4-7947084c9f7c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4c1bff17-bd66-435f-a5b4-7947084c9f7c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-854184a7-0f04-416b-8494-bb907b726f4f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-854184a7-0f04-416b-8494-bb907b726f4f')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-854184a7-0f04-416b-8494-bb907b726f4f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":113}]},{"cell_type":"markdown","source":["dataset is now ready for machine learning, with the target variable 'Survived' (y) and the features (X) after one-hot encoding. If you have any further questions or need assistance with any specific machine learning tasks or analysis,"],"metadata":{"id":"5Gb9jhw9PyFm"}},{"cell_type":"markdown","source":["now to scale the features in dataset using Min-Max scaling.created a list of column names from your one-hot encoded DataFrame.apply Min-Max scaling to the features. This code will scale the specified columns in DataFrame, making sure that each feature has values between 0 and 1. Make sure  replace new_list with the actual list of columns  want to scale."],"metadata":{"id":"DMm0GAreP0wK"}},{"cell_type":"code","source":["# Initialize the MinMaxScaler\n","scaling = MinMaxScaler()\n","\n","# Get the list of columns\n","new_list = list(df_one_hot_encoding.columns)\n","\n","# Apply Min-Max scaling to the entire dataset\n","scaled = scaling.fit_transform(df_one_hot_encoding)\n","\n","# Create a DataFrame with the scaled values\n","scaled_df = pd.DataFrame(scaled, columns=new_list)\n","\n","# Print the scaled dataset\n","print(\"Scaled Dataset Using MinMaxScaler\")\n","scaled_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":243},"id":"K-QjWMx4UGgD","executionInfo":{"status":"ok","timestamp":1699186062030,"user_tz":-480,"elapsed":333,"user":{"displayName":"Md Nizam Sapiee","userId":"06218600148546546203"}},"outputId":"c4542d8f-711e-4628-f6c7-394e58457df7"},"execution_count":114,"outputs":[{"output_type":"stream","name":"stdout","text":["Scaled Dataset Using MinMaxScaler\n"]},{"output_type":"execute_result","data":{"text/plain":["   Survived  Pclass  Cabin_Exist  Age_Group  Fare_range  Family  Sex_male  \\\n","0       0.0     1.0          0.0   0.000000    0.000000     0.1       1.0   \n","1       1.0     0.0          0.0   1.000000    1.000000     0.1       0.0   \n","2       1.0     1.0          0.0   0.333333    0.333333     0.0       0.0   \n","3       1.0     0.0          0.0   0.666667    1.000000     0.1       0.0   \n","4       0.0     1.0          0.0   0.666667    0.333333     0.0       1.0   \n","\n","   Embarked_Q  Embarked_S  Title_Miss  Title_Mr  Title_Mrs  Title_Special  \n","0         0.0         1.0         0.0       1.0        0.0            0.0  \n","1         0.0         0.0         0.0       0.0        1.0            0.0  \n","2         0.0         1.0         1.0       0.0        0.0            0.0  \n","3         0.0         1.0         0.0       0.0        1.0            0.0  \n","4         0.0         1.0         0.0       1.0        0.0            0.0  "],"text/html":["\n","  <div id=\"df-313ab946-5e7b-4656-9bf6-2a16995d75fc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Cabin_Exist</th>\n","      <th>Age_Group</th>\n","      <th>Fare_range</th>\n","      <th>Family</th>\n","      <th>Sex_male</th>\n","      <th>Embarked_Q</th>\n","      <th>Embarked_S</th>\n","      <th>Title_Miss</th>\n","      <th>Title_Mr</th>\n","      <th>Title_Mrs</th>\n","      <th>Title_Special</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.1</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.333333</td>\n","      <td>0.333333</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.666667</td>\n","      <td>1.000000</td>\n","      <td>0.1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.666667</td>\n","      <td>0.333333</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-313ab946-5e7b-4656-9bf6-2a16995d75fc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-313ab946-5e7b-4656-9bf6-2a16995d75fc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-313ab946-5e7b-4656-9bf6-2a16995d75fc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bb91762a-9cf5-4f6c-82e0-614059797a25\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bb91762a-9cf5-4f6c-82e0-614059797a25')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bb91762a-9cf5-4f6c-82e0-614059797a25 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":114}]},{"cell_type":"markdown","source":["he \"Scaled Dataset Using MinMaxScaler\" is the same dataset as the original one, but it has undergone a data scaling process using Min-Max scaling. This scaling method transforms the numerical values in each column to a new range between 0 and 1, making all the numerical features have the same scale for machine learning algorithms.\n","\n","Survived: The target variable, indicating whether a passenger survived (1) or not (0).\n","\n","Pclass: The passenger class, represented as 0.0, 1.0, or 0.5 after scaling.\n","\n","Cabin_Exist: Whether a cabin is present (1.0) or not (0.0).\n","\n","Age_Group: Age grouped into quartiles and scaled to a value between 0 and 1.\n","\n","Fare_range: Fare grouped into quartiles and scaled to a value between 0 and 1.\n","\n","Family: A derived feature combining 'SibSp' and 'Parch', scaled to a value between 0 and 1.\n","\n","Sex_male: Gender, where 'male' is represented as 1.0, and 'female' is 0.0.\n","\n","Embarked_Q: Whether the passenger embarked from Queenstown (Q) is represented as 1.0; otherwise, it's 0.0.\n","\n","Embarked_S: Whether the passenger embarked from Southampton (S) is represented as 1.0; otherwise, it's 0.0.\n","\n","Title_Miss: The title 'Miss' is represented as 1.0; otherwise, it's 0.0.\n","\n","Title_Mr: The title 'Mr' is represented as 1.0; otherwise, it's 0.0.\n","\n","Title_Mrs: The title 'Mrs' is represented as 1.0; otherwise, it's 0.0.\n","\n","Title_Special: Special titles are represented as 1.0; otherwise, it's 0.0.\n","\n","The purpose of scaling is to ensure that all numerical features have the same scale, which can help machine learning models perform better because they are less sensitive to the magnitude of feature values."],"metadata":{"id":"4GTapvcXUpa-"}},{"cell_type":"markdown","source":["logistic regression model and evaluating it using cross-validation. use the scikit-learn library for this purpose. First need to split dataset into features (X) and the target variable (y), and then proceed with model training and evaluation. The code also includes cross-validation to assess the model's performance more robustly\n","\n","This code assumes  have  preprocessed dataset with features in 'scaled' and the target variable in 'label'. It splits the data into training and test sets, fits a logistic regression model, makes predictions, and evaluates the accuracy and AUC score. Cross-validation is also used to assess the model's performance more robustly."],"metadata":{"id":"MRgPNWM-W9yG"}},{"cell_type":"code","source":["# Assuming you have the preprocessed dataset in 'scaled' (features) and 'y' (target variable)\n","X = scaled  # Features\n","y = y  # Target variable\n","\n","# Split the dataset into training and test sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# Initialize the logistic regression model\n","model = LogisticRegression()\n","\n","# Fit the model to the training data\n","model.fit(X_train, y_train)\n","\n","# Make predictions on the test set\n","y_pred = model.predict(X_test)\n","\n","# Evaluate the model's accuracy on the test set\n","accuracy = accuracy_score(y_test, y_pred)\n","print(f'Accuracy on the test set: {accuracy:.2f}')\n","\n","# Calculate the AUC score on the test set\n","roc_auc = roc_auc_score(y_test, y_pred)\n","print(f'AUC score on the test set: {roc_auc:.2f}')\n","\n","# Perform cross-validation and calculate the mean AUC score\n","cv_scores = cross_val_score(model, X, y, cv=5, scoring='roc_auc')\n","mean_cv_auc = cv_scores.mean()\n","print(f'Mean AUC score with cross-validation: {mean_cv_auc:.2f}')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"03sSWliGXUDv","executionInfo":{"status":"ok","timestamp":1699186429718,"user_tz":-480,"elapsed":913,"user":{"displayName":"Md Nizam Sapiee","userId":"06218600148546546203"}},"outputId":"e75c0cc6-097e-414c-bee5-276f66c4ed98"},"execution_count":122,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy on the test set: 1.00\n","AUC score on the test set: 1.00\n","Mean AUC score with cross-validation: 1.00\n"]}]},{"cell_type":"markdown","source":["The model has achieved 100% accuracy and an AUC score of 1.00 on the test set, which indicates that it is performing very well. The cross-validation results also show a mean AUC score of 1.00, which suggests that the model is consistently accurate across different subsets of the data.\n","\n","However, achieving 100% accuracy and an AUC score of 1.00 can sometimes be a sign of overfitting, especially if the dataset is relatively small. It's important to be cautious and consider the possibility of overfitting when you see such high scores. Further evaluation and potentially trying different models or hyperparameter tuning may be necessary to ensure the model's generalization to unseen data."],"metadata":{"id":"92Qr8TtNctkB"}}]}